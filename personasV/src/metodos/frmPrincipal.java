/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package metodos;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Ruben
 */
public class frmPrincipal extends javax.swing.JFrame {
    
    persona p;
    persona pers[];
    int pos, t;
    private frmAgregar aux;
    
    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Salir = new javax.swing.JMenu();
        salir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JCheckBoxMenuItem();
        Cargar = new javax.swing.JCheckBoxMenuItem();
        jmopciones = new javax.swing.JMenu();
        CantPers = new javax.swing.JMenuItem();
        Agregar = new javax.swing.JMenuItem();
        Listar = new javax.swing.JCheckBoxMenuItem();
        Acerca = new javax.swing.JMenu();
        Acerca2 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú Principal");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/xtremio-database-storage-analytics.png"))); // NOI18N

        Salir.setText("Archivo");

        salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Button-Close-icon.png"))); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        Salir.add(salir);

        Guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        Guardar.setSelected(true);
        Guardar.setText("Guardar");
        Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1447939311_Save.png"))); // NOI18N
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        Salir.add(Guardar);

        Cargar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        Cargar.setSelected(true);
        Cargar.setText("Cargar");
        Cargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Misc-Upload-Database-icon.png"))); // NOI18N
        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });
        Salir.add(Cargar);

        jMenuBar1.add(Salir);

        jmopciones.setText("Opciones");

        CantPers.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        CantPers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Bag-Quantity-icon.png"))); // NOI18N
        CantPers.setText("Cantidad Personas");
        CantPers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantPersActionPerformed(evt);
            }
        });
        jmopciones.add(CantPers);

        Agregar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        Agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Add-Folder-icon.png"))); // NOI18N
        Agregar.setText("Agregar Persona");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });
        jmopciones.add(Agregar);

        Listar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        Listar.setSelected(true);
        Listar.setText("Listar Personas");
        Listar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/-list-icon.png"))); // NOI18N
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });
        jmopciones.add(Listar);

        jMenuBar1.add(jmopciones);

        Acerca.setText("Acerca de");
        Acerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcercaActionPerformed(evt);
            }
        });

        Acerca2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        Acerca2.setSelected(true);
        Acerca2.setText("Informacion");
        Acerca2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Create-ticket-icon.png"))); // NOI18N
        Acerca2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Acerca2ActionPerformed(evt);
            }
        });
        Acerca.add(Acerca2);

        jMenuBar1.add(Acerca);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        setSize(new java.awt.Dimension(575, 356));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void CantPersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantPersActionPerformed
        // TODO add your handling code here:
        int tam = Integer.parseInt(  
        JOptionPane.showInputDialog("Nuemro de personas: "));
        pers = new persona[tam];
        t = tam;
        pos = 0;
        for( int i=0; i<tam; i++ ){
            pers[i] = new persona();
        }
        
        JOptionPane.showMessageDialog(null, 
        "La lista se inicializó con un numero de: "+tam);
        
    }//GEN-LAST:event_CantPersActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
     
        frmAgregar fa = new frmAgregar( pers, pos, t );
        fa.setVisible(true);
    }//GEN-LAST:event_AgregarActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        guardarLista();
    }//GEN-LAST:event_GuardarActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        try {
            Listarpersonas list  = new Listarpersonas(pers, aux);
            list.setVisible(true);

        } catch (Exception e2) {
            JOptionPane.showMessageDialog(this, "ERROR!!! Agregue personas o cargue una lista para continuar");
        }
    }//GEN-LAST:event_ListarActionPerformed

    private void AcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcercaActionPerformed
        
    }//GEN-LAST:event_AcercaActionPerformed

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed
        cargarDatos();
    }//GEN-LAST:event_CargarActionPerformed

    private void Acerca2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Acerca2ActionPerformed
        Acerca acer = new Acerca ();
        acer.setVisible(true);
    }//GEN-LAST:event_Acerca2ActionPerformed
    
        private void cargarDatos() {
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;

        try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
            archivo = new File("c:/clientes/personas.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            // Lectura del fichero
            String linea;
            String lineas = "";
            int lineasCount = 0;
            while ((linea = br.readLine()) != null) {
                lineas = lineas + linea + "\n";
                lineasCount++;
            }
            //lineas = lineas.replace("||$", "");

            pers = new persona[lineasCount];
            String[] registros = lineas.split("\n");
            for (int i = 0; i < registros.length; i++) {
                System.out.println("registro:" + registros[i]);
                String[] registro = registros[i].split(",");
                persona perTmp = new persona();
                perTmp.tipodoc = registro[0];
                perTmp.ndoc = registro[1];
                perTmp.noms = registro[2];
                perTmp.apells = registro[3];
                
                pers[i] = perTmp;
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // En el finally cerramos el fichero, para asegurarnos
            // que se cierra tanto si todo va bien como si salta 
            // una excepcion.
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(this, "Elmentos cargados");
    }

     private void guardarLista() {
        FileWriter fichero = null;
        PrintWriter pw = null;
        JFileChooser file=new JFileChooser();
        file.showSaveDialog(this);
        File guarda =file.getSelectedFile();
        /* se define un try donde se crea el archivo y su direccion la direccion donde se guarda el archivo*/
        try {
            
    JOptionPane.showMessageDialog(null,
         "El archivo se a guardado Exitosamente",
             "Información",JOptionPane.INFORMATION_MESSAGE);
    
            fichero = new FileWriter(guarda+".txt");
            
            pw = new PrintWriter(fichero);
            /* se crea un for para imprimir los datos de cada una de las persona en el documento*/
            for (persona p : pers) {
                pw.println(p.tipodoc + "," + p.ndoc + "," + p.noms + "," + p.apells
                );
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error escribiendo en el archivo " + ex.getMessage());
        } finally {
            try {
                /* se usa el finally para asegurarse que se cierra el fichero*/
                if (null != fichero) {
                    fichero.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        JOptionPane.showMessageDialog(this, "Elmentos guardados");
    }
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Acerca;
    private javax.swing.JCheckBoxMenuItem Acerca2;
    private javax.swing.JMenuItem Agregar;
    private javax.swing.JMenuItem CantPers;
    private javax.swing.JCheckBoxMenuItem Cargar;
    private javax.swing.JCheckBoxMenuItem Guardar;
    private javax.swing.JCheckBoxMenuItem Listar;
    private javax.swing.JMenu Salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jmopciones;
    private javax.swing.JMenuItem salir;
    // End of variables declaration//GEN-END:variables
}
